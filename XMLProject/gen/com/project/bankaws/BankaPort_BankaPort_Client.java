
package com.project.bankaws;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 2.6.5
 * 2015-06-02T14:03:03.615+02:00
 * Generated source version: 2.6.5
 * 
 */
public final class BankaPort_BankaPort_Client {

    private static final QName SERVICE_NAME = new QName("http://www.project.com/BankaWS", "BankaService");

    private BankaPort_BankaPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = BankaService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        BankaService ss = new BankaService(wsdlURL, SERVICE_NAME);
        BankaPort port = ss.getBankaPort();  
        
        {
        System.out.println("Invoking odradiClearing...");
        try {
            com.project.common_types.Status _odradiClearing__return = port.odradiClearing();
            System.out.println("odradiClearing.result=" + _odradiClearing__return);

        } catch (ClearingFault e) { 
            System.out.println("Expected exception: clearingFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking receiveMT910...");
        com.project.mt910.Mt910 _receiveMT910_mt910 = new com.project.mt910.Mt910();
        try {
            com.project.common_types.Status _receiveMT910__return = port.receiveMT910(_receiveMT910_mt910);
            System.out.println("receiveMT910.result=" + _receiveMT910__return);

        } catch (ReceiveMT103Fault e) { 
            System.out.println("Expected exception: receiveMT103fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking receiveMT102...");
        com.project.mt102.Mt102 _receiveMT102_mt102 = new com.project.mt102.Mt102();
        try {
            com.project.common_types.Status _receiveMT102__return = port.receiveMT102(_receiveMT102_mt102);
            System.out.println("receiveMT102.result=" + _receiveMT102__return);

        } catch (ReceiveMT102Fault e) { 
            System.out.println("Expected exception: receiveMT102fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking sendPresek...");
        com.project.zahtev_za_izvod.ZahtevZaIzvod _sendPresek_zahtev = null;
        try {
            com.project.presek.Presek _sendPresek__return = port.sendPresek(_sendPresek_zahtev);
            System.out.println("sendPresek.result=" + _sendPresek__return);

        } catch (SendPresekFault e) { 
            System.out.println("Expected exception: sendPresekFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking receiveMT103...");
        com.project.mt103.Mt103 _receiveMT103_mt103 = new com.project.mt103.Mt103();
        try {
            com.project.common_types.Status _receiveMT103__return = port.receiveMT103(_receiveMT103_mt103);
            System.out.println("receiveMT103.result=" + _receiveMT103__return);

        } catch (ReceiveMT103Fault e) { 
            System.out.println("Expected exception: receiveMT103fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking receiveNalog...");
        com.project.nalog_za_placanje.NalogZaPlacanje _receiveNalog_nalog = null;
        try {
            com.project.common_types.Status _receiveNalog__return = port.receiveNalog(_receiveNalog_nalog);
            System.out.println("receiveNalog.result=" + _receiveNalog__return);

        } catch (ReceiveNalogFault e) { 
            System.out.println("Expected exception: receiveNalogFault has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
